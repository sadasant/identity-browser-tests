{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hidden",
          "syntaxKind": "modifier"
        }
      ]
    }
  },
  "kind": "Package",
  "canonicalReference": "@azure/identity!",
  "docComment": "",
  "name": "@azure/identity",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@azure/identity!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!AggregateAuthenticationError:class",
          "docComment": "/**\n * Provides an `errors` array containing {@link AuthenticationError} instance for authentication failures from credentials in a {@link ChainedTokenCredential}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AggregateAuthenticationError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AggregateAuthenticationError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AggregateAuthenticationError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AggregateAuthenticationError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(errors: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ", errorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "errors",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "errorMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/identity!AggregateAuthenticationError#errors:member",
              "docComment": "/**\n * The array of error objects that were thrown while trying to authenticate with the credentials in a {@link ChainedTokenCredential}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errors: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/identity!AggregateAuthenticationErrorName:var",
          "docComment": "/**\n * The Error.name value of an AggregateAuthenticationError\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AggregateAuthenticationErrorName = \"AggregateAuthenticationError\""
            }
          ],
          "releaseTag": "Public",
          "name": "AggregateAuthenticationErrorName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!AuthenticationError:class",
          "docComment": "/**\n * Provides details about a failure to authenticate with Azure Active Directory. The `errorResponse` field contains more details about the specific failure.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AuthenticationError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AuthenticationError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AuthenticationError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(statusCode: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", errorBody: "
                },
                {
                  "kind": "Content",
                  "text": "object | string | undefined | null"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "statusCode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "errorBody",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/identity!AuthenticationError#errorResponse:member",
              "docComment": "/**\n * The error response details.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorResponse: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorResponse",
                  "canonicalReference": "@azure/identity!ErrorResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/identity!AuthenticationError#statusCode:member",
              "docComment": "/**\n * The HTTP status code returned from the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly statusCode: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "statusCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/identity!AuthenticationErrorName:var",
          "docComment": "/**\n * The Error.name value of an AuthenticationError\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AuthenticationErrorName = \"AuthenticationError\""
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationErrorName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!AuthenticationRecord:interface",
          "docComment": "/**\n * The record to use to find the cached tokens in the cache.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AuthenticationRecord "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationRecord",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRecord#authority:member",
              "docComment": "/**\n * The associated authority, if used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authority: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "authority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRecord#clientId:member",
              "docComment": "/**\n * The associated client ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRecord#homeAccountId:member",
              "docComment": "/**\n * The home account Id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "homeAccountId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "homeAccountId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRecord#tenantId:member",
              "docComment": "/**\n * The associated tenant ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRecord#username:member",
              "docComment": "/**\n * The username of the logged in account.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!AuthenticationRequiredError:class",
          "docComment": "/**\n * Error used to enforce authentication after trying to retrieve a token silently.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AuthenticationRequiredError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationRequiredError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AuthenticationRequiredError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AuthenticationRequiredError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n    options: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationRequiredErrorOptions",
                  "canonicalReference": "@azure/identity!AuthenticationRequiredErrorOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/identity!AuthenticationRequiredError#getTokenOptions:member",
              "docComment": "/**\n * The options passed to the getToken request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTokenOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getTokenOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/identity!AuthenticationRequiredError#scopes:member",
              "docComment": "/**\n * The list of scopes for which the token will have access.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scopes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!AuthenticationRequiredErrorOptions:interface",
          "docComment": "/**\n * Optional parameters to the {@link AuthenticationRequiredError}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AuthenticationRequiredErrorOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationRequiredErrorOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRequiredErrorOptions#getTokenOptions:member",
              "docComment": "/**\n * The options passed to the getToken request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTokenOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getTokenOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRequiredErrorOptions#message:member",
              "docComment": "/**\n * The message of the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AuthenticationRequiredErrorOptions#scopes:member",
              "docComment": "/**\n * The list of scopes for which the token will have access.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scopes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!AuthorizationCodeCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory using an authorization code that was obtained through the authorization code flow, described in more detail in the Azure Active Directory documentation:\n *\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AuthorizationCodeCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthorizationCodeCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AuthorizationCodeCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of CodeFlowCredential with the details needed to request an access token using an authentication that was obtained from Azure Active Directory.\n *\n * It is currently necessary for the user of this credential to initiate the authorization code flow to obtain an authorization code to be used with this credential. A full example of this flow is provided here:\n *\n * https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/identity/identity/samples/v2/manual/authorizationCodeSample.ts\n *\n * @param tenantId - The Azure Active Directory tenant (directory) ID or name. 'common' may be used when dealing with multi-tenant scenarios.\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param clientSecret - A client secret that was generated for the App Registration\n *\n * @param authorizationCode - An authorization code that was received from following the authorization code flow. This authorization code must not have already been used to obtain an access token.\n *\n * @param redirectUri - The redirect URI that was used to request the authorization code. Must be the same URI that is configured for the App Registration.\n *\n * @param options - Options for configuring the client which makes the access token request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string | \"common\""
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientSecret: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", authorizationCode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", redirectUri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCredentialOptions",
                  "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "clientSecret",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "authorizationCode",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "redirectUri",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AuthorizationCodeCredential:constructor(2)",
              "docComment": "/**\n * Creates an instance of CodeFlowCredential with the details needed to request an access token using an authentication that was obtained from Azure Active Directory.\n *\n * It is currently necessary for the user of this credential to initiate the authorization code flow to obtain an authorization code to be used with this credential. A full example of this flow is provided here:\n *\n * https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/identity/identity/samples/v2/manual/authorizationCodeSample.ts\n *\n * @param tenantId - The Azure Active Directory tenant (directory) ID or name. 'common' may be used when dealing with multi-tenant scenarios.\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param authorizationCode - An authorization code that was received from following the authorization code flow. This authorization code must not have already been used to obtain an access token.\n *\n * @param redirectUri - The redirect URI that was used to request the authorization code. Must be the same URI that is configured for the App Registration.\n *\n * @param options - Options for configuring the client which makes the access token request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string | \"common\""
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", authorizationCode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", redirectUri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCredentialOptions",
                  "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "authorizationCode",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "redirectUri",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!AuthorizationCodeCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/identity!AzureAuthorityHosts:enum",
          "docComment": "/**\n * A list of known Azure authority hosts\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AzureAuthorityHosts "
            }
          ],
          "releaseTag": "Public",
          "name": "AzureAuthorityHosts",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/identity!AzureAuthorityHosts.AzureChina:member",
              "docComment": "/**\n * China-based Azure Authority Host\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AzureChina = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://login.chinacloudapi.cn\""
                }
              ],
              "releaseTag": "Public",
              "name": "AzureChina",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/identity!AzureAuthorityHosts.AzureGermany:member",
              "docComment": "/**\n * Germany-based Azure Authority Host\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AzureGermany = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://login.microsoftonline.de\""
                }
              ],
              "releaseTag": "Public",
              "name": "AzureGermany",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/identity!AzureAuthorityHosts.AzureGovernment:member",
              "docComment": "/**\n * US Government Azure Authority Host\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AzureGovernment = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://login.microsoftonline.us\""
                }
              ],
              "releaseTag": "Public",
              "name": "AzureGovernment",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/identity!AzureAuthorityHosts.AzurePublicCloud:member",
              "docComment": "/**\n * Public Cloud Azure Authority Host\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AzurePublicCloud = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://login.microsoftonline.com\""
                }
              ],
              "releaseTag": "Public",
              "name": "AzurePublicCloud",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!AzureCliCredential:class",
          "docComment": "/**\n * This credential will use the currently logged-in user login information via the Azure CLI ('az') commandline tool. To do so, it will read the user access token and expire time with Azure CLI command \"az account get-access-token\".\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AzureCliCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AzureCliCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AzureCliCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the {@link AzureCliCredential}.\n *\n * To use this credential, ensure that you have already logged in via the 'az' tool using the command \"az login\" from the commandline.\n *\n * @param options - Options, to optionally allow multi-tenant requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AzureCliCredentialOptions",
                  "canonicalReference": "@azure/identity!AzureCliCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!AzureCliCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!AzureCliCredentialOptions:interface",
          "docComment": "/**\n * Options for the {@link AzureCliCredential}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AzureCliCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AzureCliCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AzureCliCredentialOptions#tenantId:member",
              "docComment": "/**\n * Allows specifying a tenant ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!AzurePowerShellCredential:class",
          "docComment": "/**\n * This credential will use the currently logged-in user information from the Azure PowerShell module. To do so, it will read the user access token and expire time with Azure PowerShell command `Get-AzAccessToken -ResourceUrl {ResourceScope}`\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AzurePowerShellCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AzurePowerShellCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!AzurePowerShellCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the {@link AzurePowerShellCredential}.\n *\n * To use this credential: - Install the Azure Az PowerShell module with: `Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force`. - You have already logged in to Azure PowerShell using the command `Connect-AzAccount` from the command line.\n *\n * @param options - Options, to optionally allow multi-tenant requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AzurePowerShellCredentialOptions",
                  "canonicalReference": "@azure/identity!AzurePowerShellCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!AzurePowerShellCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If the authentication cannot be performed through PowerShell, a {@link CredentialUnavailableError} will be thrown.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!AzurePowerShellCredentialOptions:interface",
          "docComment": "/**\n * Options for the {@link AzurePowerShellCredential}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AzurePowerShellCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AzurePowerShellCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!AzurePowerShellCredentialOptions#tenantId:member",
              "docComment": "/**\n * Allows specifying a tenant ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!BrowserLoginStyle:type",
          "docComment": "/**\n * (Browser-only feature) The \"login style\" to use in the authentication flow: - \"redirect\" redirects the user to the authentication page and then redirects them back to the page once authentication is completed. - \"popup\" opens a new browser window through with the redirect flow is initiated. The user's existing browser window does not leave the current page\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BrowserLoginStyle = "
            },
            {
              "kind": "Content",
              "text": "\"redirect\" | \"popup\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BrowserLoginStyle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!ChainedTokenCredential:class",
          "docComment": "/**\n * Enables multiple `TokenCredential` implementations to be tried in order until one of the getToken methods returns an access token.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ChainedTokenCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChainedTokenCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ChainedTokenCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of ChainedTokenCredential using the given credentials.\n *\n * @param sources - `TokenCredential` implementations to be tried in order.\n *\n * Example usage:\n * ```javascript\n * const firstCredential = new ClientSecretCredential(tenantId, clientId, clientSecret);\n * const secondCredential = new ClientSecretCredential(tenantId, anotherClientId, anotherSecret);\n * const credentialChain = new ChainedTokenCredential(firstCredential, secondCredential);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...sources: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCredential",
                  "canonicalReference": "@azure/core-auth!TokenCredential:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sources",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!ChainedTokenCredential#getToken:member(1)",
              "docComment": "/**\n * Returns the first access token returned by one of the chained `TokenCredential` implementations. Throws an {@link AggregateAuthenticationError} when one or more credentials throws an {@link AuthenticationError} and no credentials have returned an access token.\n *\n * This method is called automatically by Azure SDK client libraries. You may call this method directly, but you must also handle token caching and token refreshing.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this `TokenCredential` implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/identity!ChainedTokenCredential#UnavailableMessage:member",
              "docComment": "/**\n * The message to use when the chained token fails to get a token\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected UnavailableMessage: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "UnavailableMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!ClientAssertionCredential:class",
          "docComment": "/**\n * Authenticates a service principal with a JWT assertion.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClientAssertionCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientAssertionCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ClientAssertionCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the ClientAssertionCredential with the details needed to authenticate against Azure Active Directory with a client assertion provided by the developer through the `getAssertion` function parameter.\n *\n * @param tenantId - The Azure Active Directory tenant (directory) ID.\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param getAssertion - A function that retrieves the assertion for the credential to use.\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", getAssertion: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientAssertionCredentialOptions",
                  "canonicalReference": "@azure/identity!ClientAssertionCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "getAssertion",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!ClientAssertionCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!ClientAssertionCredentialOptions:interface",
          "docComment": "/**\n * Optional parameters for the {@link ClientAssertionCredential} class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientAssertionCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientAssertionCredentialOptions",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!ClientCertificateCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory using a PEM-encoded certificate that is assigned to an App Registration. More information on how to configure certificate authentication can be found here:\n *\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-certificate-credentials#register-your-certificate-with-azure-ad\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClientCertificateCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientCertificateCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ClientCertificateCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with a certificate.\n *\n * @param tenantId - The Azure Active Directory tenant (directory) ID.\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param certificatePath - The path to a PEM-encoded public/private key certificate on the filesystem.\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", certificatePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientCertificateCredentialOptions",
                  "canonicalReference": "@azure/identity!ClientCertificateCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "certificatePath",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ClientCertificateCredential:constructor(2)",
              "docComment": "/**\n * Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with a certificate.\n *\n * @param tenantId - The Azure Active Directory tenant (directory) ID.\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param configuration - Other parameters required, including the PEM-encoded certificate as a string, or as a path on the filesystem. If the type is ignored, we will throw if both the value of the PEM certificate and the path to a PEM certificate are provided at the same time.\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", configuration: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientCertificateCredentialPEMConfiguration",
                  "canonicalReference": "@azure/identity!ClientCertificateCredentialPEMConfiguration:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientCertificateCredentialOptions",
                  "canonicalReference": "@azure/identity!ClientCertificateCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "configuration",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!ClientCertificateCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!ClientCertificateCredentialOptions:interface",
          "docComment": "/**\n * Optional parameters for the {@link ClientCertificateCredential} class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientCertificateCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CredentialPersistenceOptions",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientCertificateCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ClientCertificateCredentialOptions#sendCertificateChain:member",
              "docComment": "/**\n * Option to include x5c header for SubjectName and Issuer name authorization. Set this option to send base64 encoded public certificate in the client assertion header as an x5c claim\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendCertificateChain?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sendCertificateChain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!ClientCertificateCredentialPEMConfiguration:type",
          "docComment": "/**\n * Required configuration options for the {@link ClientCertificateCredential}, with either the string contents of a PEM certificate, or the path to a PEM certificate.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ClientCertificateCredentialPEMConfiguration = "
            },
            {
              "kind": "Content",
              "text": "{\n    certificate: string;\n    certificatePath?: never;\n} | {\n    certificate?: never;\n    certificatePath: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ClientCertificateCredentialPEMConfiguration",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!ClientSecretCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory using a client secret that was generated for an App Registration. More information on how to configure a client secret can be found here:\n *\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-configure-app-access-web-apis#add-credentials-to-your-web-application\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClientSecretCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientSecretCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ClientSecretCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the ClientSecretCredential with the details needed to authenticate against Azure Active Directory with a client secret.\n *\n * @param tenantId - The Azure Active Directory tenant (directory) ID.\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param clientSecret - A client secret that was generated for the App Registration.\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientSecret: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSecretCredentialOptions",
                  "canonicalReference": "@azure/identity!ClientSecretCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "clientSecret",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!ClientSecretCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!ClientSecretCredentialOptions:interface",
          "docComment": "/**\n * Optional parameters for the {@link ClientSecretCredential} class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientSecretCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CredentialPersistenceOptions",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientSecretCredentialOptions",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface",
          "docComment": "/**\n * Shared configuration options for credentials that support persistent token caching.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CredentialPersistenceOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "CredentialPersistenceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions#tokenCachePersistenceOptions:member",
              "docComment": "/**\n * Options to provide to the persistence layer (if one is available) when storing credentials.\n *\n * You must first register a persistence provider plugin. See the `@azure/identity-cache-persistence` package on NPM.\n *\n * Example:\n * ```javascript\n * import { cachePersistencePlugin } from \"@azure/identity-cache-persistence\";\n * import { useIdentityPlugin, DeviceCodeCredential } from \"@azure/identity\";\n *\n * useIdentityPlugin(cachePersistencePlugin);\n *\n * async function main() {\n *   const credential = new DeviceCodeCredential({\n *     tokenCachePersistenceOptions: {\n *       enabled: true\n *     }\n *   });\n * }\n *\n * main().catch((error) => {\n *   console.error(\"An error occurred:\", error);\n *   process.exit(1);\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenCachePersistenceOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCachePersistenceOptions",
                  "canonicalReference": "@azure/identity!TokenCachePersistenceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tokenCachePersistenceOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!CredentialUnavailableError:class",
          "docComment": "/**\n * This signifies that the credential that was tried in a chained credential was not available to be used as the credential. Rather than treating this as an error that should halt the chain, it's caught and the chain continues\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CredentialUnavailableError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CredentialUnavailableError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!CredentialUnavailableError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CredentialUnavailableError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/identity!CredentialUnavailableErrorName:var",
          "docComment": "/**\n * The Error.name value of an CredentialUnavailable\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CredentialUnavailableErrorName = \"CredentialUnavailableError\""
            }
          ],
          "releaseTag": "Public",
          "name": "CredentialUnavailableErrorName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!DefaultAzureCredential:class",
          "docComment": "/**\n * Provides a default {@link ChainedTokenCredential} configuration that should work for most applications that use the Azure SDK.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefaultAzureCredential extends "
            },
            {
              "kind": "Reference",
              "text": "ChainedTokenCredential",
              "canonicalReference": "@azure/identity!ChainedTokenCredential:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultAzureCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!DefaultAzureCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the DefaultAzureCredential class.\n *\n * This credential provides a default {@link ChainedTokenCredential} configuration that should work for most applications that use the Azure SDK.\n *\n * The following credential types will be tried, in order:\n *\n * - {@link EnvironmentCredential} - {@link ManagedIdentityCredential} - {@link VisualStudioCodeCredential} - {@link AzureCliCredential} - {@link AzurePowerShellCredential}\n *\n * Consult the documentation of these credential types for more information on how they attempt authentication.\n *\n * **Note**: `VisualStudioCodeCredential` is provided by a plugin package: `@azure/identity-vscode`. If this package is not installed and registered using the plugin API (`useIdentityPlugin`), then authentication using `VisualStudioCodeCredential` will not be available.\n *\n * @param options - Optional parameters. See {@link DefaultAzureCredentialOptions}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultAzureCredentialOptions",
                  "canonicalReference": "@azure/identity!DefaultAzureCredentialOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!DefaultAzureCredentialClientIdOptions:interface",
          "docComment": "/**\n * Provides options to configure the {@link DefaultAzureCredential} class. This variation supports `managedIdentityClientId` and not `managedIdentityResourceId`, since only one of both is supported.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DefaultAzureCredentialClientIdOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultAzureCredentialClientIdOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DefaultAzureCredentialClientIdOptions#managedIdentityClientId:member",
              "docComment": "/**\n * Optionally pass in a user assigned client ID to be used by the {@link ManagedIdentityCredential}. This client ID can also be passed through to the {@link ManagedIdentityCredential} through the environment variable: AZURE_CLIENT_ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "managedIdentityClientId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "managedIdentityClientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DefaultAzureCredentialClientIdOptions#tenantId:member",
              "docComment": "/**\n * Optionally pass in a Tenant ID to be used as part of the credential. By default it may use a generic tenant ID depending on the underlying credential.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!DefaultAzureCredentialOptions:type",
          "docComment": "/**\n * Provides options to configure the {@link DefaultAzureCredential} class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DefaultAzureCredentialOptions = "
            },
            {
              "kind": "Reference",
              "text": "DefaultAzureCredentialClientIdOptions",
              "canonicalReference": "@azure/identity!DefaultAzureCredentialClientIdOptions:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DefaultAzureCredentialOptionsWithResourceId",
              "canonicalReference": "@azure/identity!DefaultAzureCredentialOptionsWithResourceId:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultAzureCredentialOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!DefaultAzureCredentialResourceIdOptions:interface",
          "docComment": "/**\n * Provides options to configure the {@link DefaultAzureCredential} class. This variation supports `managedIdentityResourceId` and not `managedIdentityClientId`, since only one of both is supported.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DefaultAzureCredentialOptionsWithResourceId extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultAzureCredentialResourceIdOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DefaultAzureCredentialResourceIdOptions#managedIdentityResourceId:member",
              "docComment": "/**\n * Optionally pass in a resource ID to be used by the {@link ManagedIdentityCredential}. In scenarios such as when user assigned identities are created using an ARM template, where the resource Id of the identity is known but the client Id can't be known ahead of time, this parameter allows programs to use these user assigned identities without having to first determine the client Id of the created identity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "managedIdentityResourceId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "managedIdentityResourceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DefaultAzureCredentialResourceIdOptions#tenantId:member",
              "docComment": "/**\n * Optionally pass in a Tenant ID to be used as part of the credential. By default it may use a generic tenant ID depending on the underlying credential.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/identity!deserializeAuthenticationRecord:function(1)",
          "docComment": "/**\n * Deserializes a previously serialized authentication record from a string into an object.\n *\n * The input string must contain the following properties:\n *\n * - \"authority\" - \"homeAccountId\" - \"clientId\" - \"tenantId\" - \"username\" - \"version\"\n *\n * If the version we receive is unsupported, an error will be thrown.\n *\n * At the moment, the only available version is: \"1.0\", which is always set when the authentication record is serialized.\n *\n * @param serializedRecord - Authentication record previously serialized into string.\n *\n * @returns AuthenticationRecord.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deserializeAuthenticationRecord(serializedRecord: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AuthenticationRecord",
              "canonicalReference": "@azure/identity!AuthenticationRecord:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "serializedRecord",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "deserializeAuthenticationRecord"
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!DeviceCodeCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory using a device code that the user can enter into https://microsoft.com/devicelogin.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DeviceCodeCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceCodeCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!DeviceCodeCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of DeviceCodeCredential with the details needed to initiate the device code authorization flow with Azure Active Directory.\n *\n * A message will be logged, giving users a code that they can use to authenticate once they go to https://microsoft.com/devicelogin\n *\n * Developers can configure how this message is shown by passing a custom `userPromptCallback`:\n * ```js\n * const credential = new DeviceCodeCredential({\n *   tenantId: env.AZURE_TENANT_ID,\n *   clientId: env.AZURE_CLIENT_ID,\n *   userPromptCallback: (info) => {\n *     console.log(\"CUSTOMIZED PROMPT CALLBACK\", info.message);\n *   }\n * });\n * ```\n *\n * @param options - Options for configuring the client which makes the authentication requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DeviceCodeCredentialOptions",
                  "canonicalReference": "@azure/identity!DeviceCodeCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!DeviceCodeCredential#authenticate:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * If the token can't be retrieved silently, this method will require user interaction to retrieve the token.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticate(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationRecord",
                  "canonicalReference": "@azure/identity!AuthenticationRecord:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "authenticate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!DeviceCodeCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * If the user provided the option `disableAutomaticAuthentication`, once the token can't be retrieved silently, this method won't attempt to request user interaction to retrieve the token.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!DeviceCodeCredentialOptions:interface",
          "docComment": "/**\n * Defines options for the InteractiveBrowserCredential class for Node.js.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeviceCodeCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "InteractiveCredentialOptions",
              "canonicalReference": "@azure/identity!InteractiveCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CredentialPersistenceOptions",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceCodeCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DeviceCodeCredentialOptions#clientId:member",
              "docComment": "/**\n * The client (application) ID of an App Registration in the tenant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DeviceCodeCredentialOptions#tenantId:member",
              "docComment": "/**\n * The Azure Active Directory tenant (directory) ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DeviceCodeCredentialOptions#userPromptCallback:member",
              "docComment": "/**\n * A callback function that will be invoked to show {@link DeviceCodeInfo} to the user. If left unassigned, we will automatically log the device code information and the authentication instructions in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPromptCallback?: "
                },
                {
                  "kind": "Reference",
                  "text": "DeviceCodePromptCallback",
                  "canonicalReference": "@azure/identity!DeviceCodePromptCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPromptCallback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!DeviceCodeInfo:interface",
          "docComment": "/**\n * Provides the user code and verification URI where the code must be entered. Also provides a message to display to the user which contains an instruction with these details.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeviceCodeInfo "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceCodeInfo",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DeviceCodeInfo#message:member",
              "docComment": "/**\n * A message that may be shown to the user to instruct them on how to enter the device code in the page specified by the verification URI.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DeviceCodeInfo#userCode:member",
              "docComment": "/**\n * The device code that the user must enter into the verification page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userCode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!DeviceCodeInfo#verificationUri:member",
              "docComment": "/**\n * The verification URI to which the user must navigate to enter the device code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verificationUri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "verificationUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!DeviceCodePromptCallback:type",
          "docComment": "/**\n * Defines the signature of a callback which will be passed to DeviceCodeCredential for the purpose of displaying authentication details to the user.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DeviceCodePromptCallback = "
            },
            {
              "kind": "Content",
              "text": "(deviceCodeInfo: "
            },
            {
              "kind": "Reference",
              "text": "DeviceCodeInfo",
              "canonicalReference": "@azure/identity!DeviceCodeInfo:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceCodePromptCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!EnvironmentCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory using client secret details configured in environment variables\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EnvironmentCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EnvironmentCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!EnvironmentCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the EnvironmentCredential class and decides what credential to use depending on the available environment variables.\n *\n * Required environment variables: - `AZURE_TENANT_ID`: The Azure Active Directory tenant (directory) ID. - `AZURE_CLIENT_ID`: The client (application) ID of an App Registration in the tenant.\n *\n * Environment variables used for client credential authentication: - `AZURE_CLIENT_SECRET`: A client secret that was generated for the App Registration. - `AZURE_CLIENT_CERTIFICATE_PATH`: The path to a PEM certificate to use during the authentication, instead of the client secret.\n *\n * Alternatively, users can provide environment variables for username and password authentication: - `AZURE_USERNAME`: Username to authenticate with. - `AZURE_PASSWORD`: Password to authenticate with.\n *\n * If the environment variables required to perform the authentication are missing, a {@link CredentialUnavailableError} will be thrown. If the authentication fails, or if there's an unknown error, an {@link AuthenticationError} will be thrown.\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "EnvironmentCredentialOptions",
                  "canonicalReference": "@azure/identity!EnvironmentCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!EnvironmentCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - Optional parameters. See {@link GetTokenOptions}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!EnvironmentCredentialOptions:interface",
          "docComment": "/**\n * Enables authentication to Azure Active Directory depending on the available environment variables. Defines options for the EnvironmentCredential class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EnvironmentCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EnvironmentCredentialOptions",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!ErrorResponse:interface",
          "docComment": "/**\n * See the official documentation for more details:\n *\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code#error-response-1\n *\n * NOTE: This documentation is for v1 OAuth support but the same error response details still apply to v2.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ErrorResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ErrorResponse#correlationId:member",
              "docComment": "/**\n * The correlation ID to be used for tracking the source of the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "correlationId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "correlationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ErrorResponse#error:member",
              "docComment": "/**\n * The string identifier for the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ErrorResponse#errorCodes:member",
              "docComment": "/**\n * An array of codes pertaining to the error(s) that occurred.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorCodes?: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errorCodes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ErrorResponse#errorDescription:member",
              "docComment": "/**\n * The error's description.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorDescription: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ErrorResponse#timestamp:member",
              "docComment": "/**\n * The timestamp at which the error occurred.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timestamp?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timestamp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ErrorResponse#traceId:member",
              "docComment": "/**\n * The trace identifier for this error occurrence.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "traceId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "traceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/identity!getDefaultAzureCredential:function(1)",
          "docComment": "/**\n * Returns a new instance of the {@link DefaultAzureCredential}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDefaultAzureCredential(): "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getDefaultAzureCredential"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!IdentityPlugin:type",
          "docComment": "/**\n * The type of an Azure Identity plugin, a function accepting a plugin context.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IdentityPlugin = "
            },
            {
              "kind": "Content",
              "text": "(context: unknown) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IdentityPlugin",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!InteractiveBrowserCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory inside of the web browser using the interactive login flow.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InteractiveBrowserCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InteractiveBrowserCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of InteractiveBrowserCredential with the details needed.\n *\n * This credential uses the [Authorization Code Flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow). On Node.js, it will open a browser window while it listens for a redirect response from the authentication service. On browsers, it authenticates via popups. The `loginStyle` optional parameter can be set to `redirect` to authenticate by redirecting the user to an Azure secure login page, which then will redirect the user back to the web application where the authentication started.\n *\n * For Node.js, if a `clientId` is provided, the Azure Active Directory application will need to be configured to have a \"Mobile and desktop applications\" redirect endpoint. Follow our guide on [setting up Redirect URIs for Desktop apps that calls to web APIs](https://docs.microsoft.com/azure/active-directory/develop/scenario-desktop-app-registration#redirect-uris).\n *\n * @param options - Options for configuring the client which makes the authentication requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "InteractiveBrowserCredentialNodeOptions",
                  "canonicalReference": "@azure/identity!InteractiveBrowserCredentialNodeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "InteractiveBrowserCredentialInBrowserOptions",
                  "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredential#authenticate:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * If the token can't be retrieved silently, this method will require user interaction to retrieve the token.\n *\n * On Node.js, this credential has [Proof Key for Code Exchange (PKCE)](https://datatracker.ietf.org/doc/html/rfc7636) enabled by default. PKCE is a security feature that mitigates authentication code interception attacks.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticate(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationRecord",
                  "canonicalReference": "@azure/identity!AuthenticationRecord:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "authenticate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * If the user provided the option `disableAutomaticAuthentication`, once the token can't be retrieved silently, this method won't attempt to request user interaction to retrieve the token.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions:interface",
          "docComment": "/**\n * Defines the common options for the InteractiveBrowserCredential class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InteractiveBrowserCredentialInBrowserOptions extends "
            },
            {
              "kind": "Reference",
              "text": "InteractiveCredentialOptions",
              "canonicalReference": "@azure/identity!InteractiveCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InteractiveBrowserCredentialInBrowserOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions#clientId:member",
              "docComment": "/**\n * The client (application) ID of an App Registration in the tenant. This parameter is required on the browser.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions#loginHint:member",
              "docComment": "/**\n * loginHint allows a user name to be pre-selected for interactive logins. Setting this option skips the account selection prompt and immediately attempts to login with the specified account.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loginHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loginHint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions#loginStyle:member",
              "docComment": "/**\n * Specifies whether a redirect or a popup window should be used to initiate the user authentication flow. Possible values are \"redirect\" or \"popup\" (default) for browser and \"popup\" (default) for node.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loginStyle?: "
                },
                {
                  "kind": "Reference",
                  "text": "BrowserLoginStyle",
                  "canonicalReference": "@azure/identity!BrowserLoginStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loginStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions#redirectUri:member",
              "docComment": "/**\n * Gets the redirect URI of the application. This should be same as the value in the application registration portal. Defaults to `window.location.href`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redirectUri?: "
                },
                {
                  "kind": "Content",
                  "text": "string | (() => string)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "redirectUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialInBrowserOptions#tenantId:member",
              "docComment": "/**\n * The Azure Active Directory tenant (directory) ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!InteractiveBrowserCredentialNodeOptions:interface",
          "docComment": "/**\n * Defines the common options for the InteractiveBrowserCredential class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InteractiveBrowserCredentialNodeOptions extends "
            },
            {
              "kind": "Reference",
              "text": "InteractiveCredentialOptions",
              "canonicalReference": "@azure/identity!InteractiveCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CredentialPersistenceOptions",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InteractiveBrowserCredentialNodeOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialNodeOptions#clientId:member",
              "docComment": "/**\n * The client (application) ID of an App Registration in the tenant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialNodeOptions#loginHint:member",
              "docComment": "/**\n * loginHint allows a user name to be pre-selected for interactive logins. Setting this option skips the account selection prompt and immediately attempts to login with the specified account.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loginHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loginHint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialNodeOptions#redirectUri:member",
              "docComment": "/**\n * Gets the redirect URI of the application. This should be same as the value in the application registration portal. Defaults to `window.location.href`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redirectUri?: "
                },
                {
                  "kind": "Content",
                  "text": "string | (() => string)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "redirectUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveBrowserCredentialNodeOptions#tenantId:member",
              "docComment": "/**\n * The Azure Active Directory tenant (directory) ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!InteractiveCredentialOptions:interface",
          "docComment": "/**\n * Common constructor options for the Identity credentials that requires user interaction.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InteractiveCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InteractiveCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveCredentialOptions#authenticationRecord:member",
              "docComment": "/**\n * Result of a previous authentication that can be used to retrieve the cached credentials of each individual account. This is necessary to provide in case the application wants to work with more than one account per Client ID and Tenant ID pair.\n *\n * This record can be retrieved by calling to the credential's `authenticate()` method, as follows:\n *\n * const authenticationRecord = await credential.authenticate();\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticationRecord?: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationRecord",
                  "canonicalReference": "@azure/identity!AuthenticationRecord:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authenticationRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!InteractiveCredentialOptions#disableAutomaticAuthentication:member",
              "docComment": "/**\n * Makes getToken throw if a manual authentication is necessary. Developers will need to call to `authenticate()` to control when to manually authenticate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableAutomaticAuthentication?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableAutomaticAuthentication",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/identity!logger:var",
          "docComment": "/**\n * The AzureLogger used for all clients within the identity package\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "logger: "
            },
            {
              "kind": "Reference",
              "text": "AzureLogger",
              "canonicalReference": "@azure/logger!AzureLogger:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "logger",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!ManagedIdentityCredential:class",
          "docComment": "/**\n * Attempts authentication using a managed identity available at the deployment environment. This authentication type works in Azure VMs, App Service instances, Azure Functions applications, Azure Kubernetes Services, Azure Service Fabric instances and inside of the Azure Cloud Shell.\n *\n * More information about configuring managed identities can be found here: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManagedIdentityCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ManagedIdentityCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ManagedIdentityCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of ManagedIdentityCredential with the client ID of a user-assigned identity, or app registration (when working with AKS pod-identity).\n *\n * @param clientId - The client ID of the user-assigned identity, or app registration (when working with AKS pod-identity).\n *\n * @param options - Options for configuring the client which makes the access token request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCredentialOptions",
                  "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!ManagedIdentityCredential:constructor(2)",
              "docComment": "/**\n * Creates an instance of ManagedIdentityCredential\n *\n * @param options - Options for configuring the client which makes the access token request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ManagedIdentityCredentialOptions",
                  "canonicalReference": "@azure/identity!ManagedIdentityCredentialOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!ManagedIdentityCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure. If an unexpected error occurs, an {@link AuthenticationError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!ManagedIdentityCredentialClientIdOptions:interface",
          "docComment": "/**\n * Options to send on the {@link ManagedIdentityCredential} constructor. This variation supports `clientId` and not `resourceId`, since only one of both is supported.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManagedIdentityCredentialClientIdOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ManagedIdentityCredentialClientIdOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ManagedIdentityCredentialClientIdOptions#clientId:member",
              "docComment": "/**\n * The client ID of the user - assigned identity, or app registration(when working with AKS pod - identity).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!ManagedIdentityCredentialOptions:type",
          "docComment": "/**\n * Options to send on the {@link ManagedIdentityCredential} constructor.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ManagedIdentityCredentialOptions = "
            },
            {
              "kind": "Reference",
              "text": "ManagedIdentityCredentialClientIdOptions",
              "canonicalReference": "@azure/identity!ManagedIdentityCredentialClientIdOptions:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ManagedIdentityCredentialResourceIdOptions",
              "canonicalReference": "@azure/identity!ManagedIdentityCredentialResourceIdOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ManagedIdentityCredentialOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!ManagedIdentityCredentialResourceIdOptions:interface",
          "docComment": "/**\n * Options to send on the {@link ManagedIdentityCredential} constructor. This variation supports `resourceId` and not `clientId`, since only one of both is supported.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManagedIdentityCredentialResourceIdOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ManagedIdentityCredentialResourceIdOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!ManagedIdentityCredentialResourceIdOptions#resourceId:member",
              "docComment": "/**\n * Allows specifying a custom resource Id. In scenarios such as when user assigned identities are created using an ARM template, where the resource Id of the identity is known but the client Id can't be known ahead of time, this parameter allows programs to use these user assigned identities without having to first determine the client Id of the created identity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resourceId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resourceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!OnBehalfOfCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory using the [On Behalf Of flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OnBehalfOfCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OnBehalfOfCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!OnBehalfOfCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the {@link OnBehalfOfCredential} with the details needed to authenticate against Azure Active Directory with a client secret or a path to a PEM certificate, and an user assertion.\n *\n * Example using the `KeyClient` from [\\@azure/keyvault-keys](https://www.npmjs.com/package/\\@azure/keyvault-keys):\n * ```ts\n * const tokenCredential = new OnBehalfOfCredential({\n *   tenantId,\n *   clientId,\n *   clientSecret, // or `certificatePath: \"/path/to/certificate.pem\"\n *   userAssertionToken: \"access-token\"\n * });\n * const client = new KeyClient(\"vault-url\", tokenCredential);\n *\n * await client.getKey(\"key-name\");\n * ```\n *\n * @param options - Optional parameters, generally common across credentials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OnBehalfOfCredentialOptions",
                  "canonicalReference": "@azure/identity!OnBehalfOfCredentialOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!OnBehalfOfCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure the underlying network requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions:interface",
          "docComment": "/**\n * Defines the parameters to authenticate the {@link OnBehalfOfCredential} with a certificate.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OnBehalfOfCredentialCertificateOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "OnBehalfOfCredentialCertificateOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions#certificatePath:member",
              "docComment": "/**\n * The path to a PEM-encoded public/private key certificate on the filesystem.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificatePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "certificatePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions#clientId:member",
              "docComment": "/**\n * The client (application) ID of an App Registration in the tenant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions#clientSecret:member",
              "docComment": "/**\n * Client secret should not be provided when certificate options are provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientSecret?: "
                },
                {
                  "kind": "Content",
                  "text": "never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clientSecret",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions#sendCertificateChain:member",
              "docComment": "/**\n * Option to include x5c header for SubjectName and Issuer name authorization. Set this option to send base64 encoded public certificate in the client assertion header as an x5c claim\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendCertificateChain?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sendCertificateChain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions#tenantId:member",
              "docComment": "/**\n * The Azure Active Directory tenant (directory) ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions#userAssertionToken:member",
              "docComment": "/**\n * The user assertion for the On-Behalf-Of flow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userAssertionToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userAssertionToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/identity!OnBehalfOfCredentialOptions:type",
          "docComment": "/**\n * Optional parameters for the {@link OnBehalfOfCredential} class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OnBehalfOfCredentialOptions = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "OnBehalfOfCredentialSecretOptions",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "OnBehalfOfCredentialCertificateOptions",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialCertificateOptions:interface"
            },
            {
              "kind": "Content",
              "text": ") & "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "CredentialPersistenceOptions",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OnBehalfOfCredentialOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions:interface",
          "docComment": "/**\n * Defines the parameters to authenticate the {@link OnBehalfOfCredential} with a secret.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OnBehalfOfCredentialSecretOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "OnBehalfOfCredentialSecretOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions#certificatePath:member",
              "docComment": "/**\n * The path to a PEM-encoded certificate should not be provided when the secret options are provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificatePath?: "
                },
                {
                  "kind": "Content",
                  "text": "never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "certificatePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions#clientId:member",
              "docComment": "/**\n * The client (application) ID of an App Registration in the tenant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions#clientSecret:member",
              "docComment": "/**\n * A client secret that was generated for the App Registration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientSecret: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientSecret",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions#sendCertificateChain:member",
              "docComment": "/**\n * Option to include x5c header should not be provided when the secret options are provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendCertificateChain?: "
                },
                {
                  "kind": "Content",
                  "text": "never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sendCertificateChain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions#tenantId:member",
              "docComment": "/**\n * The Azure Active Directory tenant (directory) ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!OnBehalfOfCredentialSecretOptions#userAssertionToken:member",
              "docComment": "/**\n * The user assertion for the On-Behalf-Of flow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userAssertionToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userAssertionToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/identity!serializeAuthenticationRecord:function(1)",
          "docComment": "/**\n * Serializes an `AuthenticationRecord` into a string.\n *\n * The output of a serialized authentication record will contain the following properties:\n *\n * - \"authority\" - \"homeAccountId\" - \"clientId\" - \"tenantId\" - \"username\" - \"version\"\n *\n * To later convert this string to a serialized `AuthenticationRecord`, please use the exported function `deserializeAuthenticationRecord()`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function serializeAuthenticationRecord(record: "
            },
            {
              "kind": "Reference",
              "text": "AuthenticationRecord",
              "canonicalReference": "@azure/identity!AuthenticationRecord:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "record",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "serializeAuthenticationRecord"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!TokenCachePersistenceOptions:interface",
          "docComment": "/**\n * Parameters that enable token cache persistence in the Identity credentials.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenCachePersistenceOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenCachePersistenceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!TokenCachePersistenceOptions#enabled:member",
              "docComment": "/**\n * If set to true, persistent token caching will be enabled for this credential instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!TokenCachePersistenceOptions#name:member",
              "docComment": "/**\n * Unique identifier for the persistent token cache.\n *\n * Based on this identifier, the persistence file will be located in any of the following places: - Darwin: '/Users/user/.IdentityService/<name>' - Windows 8+: 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\.IdentityService\\\\<name>' - Linux: '/home/user/.IdentityService/<name>'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!TokenCachePersistenceOptions#unsafeAllowUnencryptedStorage:member",
              "docComment": "/**\n * If set to true, the cache will be stored without encryption if no OS level user encryption is available. When set to false, the PersistentTokenCache will throw an error if no OS level user encryption is available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unsafeAllowUnencryptedStorage?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "unsafeAllowUnencryptedStorage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!TokenCredentialOptions:interface",
          "docComment": "/**\n * Provides options to configure how the Identity library makes authentication requests to Azure Active Directory.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommonClientOptions",
              "canonicalReference": "@azure/core-client!CommonClientOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!TokenCredentialOptions#allowLoggingAccountIdentifiers:member",
              "docComment": "/**\n * Allows logging account information once the authentication flow succeeds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowLoggingAccountIdentifiers?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "allowLoggingAccountIdentifiers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!TokenCredentialOptions#authorityHost:member",
              "docComment": "/**\n * The authority host to use for authentication requests. Possible values are available through {@link AzureAuthorityHosts}. The default is \"https://login.microsoftonline.com\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authorityHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authorityHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/identity!useIdentityPlugin:function(1)",
          "docComment": "/**\n * Extend Azure Identity with additional functionality. Pass a plugin from a plugin package, such as:\n *\n * - `@azure/identity-cache-persistence`: provides persistent token caching - `@azure/identity-vscode`: provides the dependencies of `VisualStudioCodeCredential` and enables it\n *\n * Example:\n * ```javascript\n * import { cachePersistencePlugin } from \"@azure/identity-cache-persistence\";\n *\n * import { useIdentityPlugin, DefaultAzureCredential } from \"@azure/identity\";\n * useIdentityPlugin(cachePersistencePlugin);\n *\n * // The plugin has the capability to extend `DefaultAzureCredential` and to\n * // add middleware to the underlying credentials, such as persistence.\n * const credential = new DefaultAzureCredential({\n *   tokenCachePersistenceOptions: {\n *     enabled: true\n *   }\n * });\n * ```\n *\n * @param plugin - the plugin to register\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useIdentityPlugin(plugin: "
            },
            {
              "kind": "Reference",
              "text": "IdentityPlugin",
              "canonicalReference": "@azure/identity!IdentityPlugin:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "plugin",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "useIdentityPlugin"
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!UsernamePasswordCredential:class",
          "docComment": "/**\n * Enables authentication to Azure Active Directory with a user's username and password. This credential requires a high degree of trust so you should only use it when other, more secure credential types can't be used.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UsernamePasswordCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UsernamePasswordCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!UsernamePasswordCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of the UsernamePasswordCredential with the details needed to authenticate against Azure Active Directory with a username and password.\n *\n * @param tenantId - The Azure Active Directory tenant (directory).\n *\n * @param clientId - The client (application) ID of an App Registration in the tenant.\n *\n * @param username - The user account's e-mail address (user name).\n *\n * @param password - The user account's account password\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tenantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "UsernamePasswordCredentialOptions",
                  "canonicalReference": "@azure/identity!UsernamePasswordCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tenantId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!UsernamePasswordCredential#getToken:member(1)",
              "docComment": "/**\n * Authenticates with Azure Active Directory and returns an access token if successful. If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n *\n * If the user provided the option `disableAutomaticAuthentication`, once the token can't be retrieved silently, this method won't attempt to request user interaction to retrieve the token.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this TokenCredential implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!UsernamePasswordCredentialOptions:interface",
          "docComment": "/**\n * Defines options for the {@link UsernamePasswordCredential} class.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UsernamePasswordCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CredentialPersistenceOptions",
              "canonicalReference": "@azure/identity!CredentialPersistenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UsernamePasswordCredentialOptions",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/identity!VisualStudioCodeCredential:class",
          "docComment": "/**\n * Connects to Azure using the credential provided by the VSCode extension 'Azure Account'. Once the user has logged in via the extension, this credential can share the same refresh token that is cached by the extension.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class VisualStudioCodeCredential implements "
            },
            {
              "kind": "Reference",
              "text": "TokenCredential",
              "canonicalReference": "@azure/core-auth!TokenCredential:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "VisualStudioCodeCredential",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/identity!VisualStudioCodeCredential:constructor(1)",
              "docComment": "/**\n * Creates an instance of VisualStudioCodeCredential to use for automatically authenticating via VSCode.\n *\n * **Note**: `VisualStudioCodeCredential` is provided by a plugin package: `@azure/identity-vscode`. If this package is not installed and registered using the plugin API (`useIdentityPlugin`), then authentication using `VisualStudioCodeCredential` will not be available.\n *\n * @param options - Options for configuring the client which makes the authentication request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "VisualStudioCodeCredentialOptions",
                  "canonicalReference": "@azure/identity!VisualStudioCodeCredentialOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/identity!VisualStudioCodeCredential#getToken:member(1)",
              "docComment": "/**\n * Returns the token found by searching VSCode's authentication cache or returns null if no token could be found.\n *\n * @param scopes - The list of scopes for which the token will have access.\n *\n * @param options - The options used to configure any requests this `TokenCredential` implementation might make.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(scopes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetTokenOptions",
                  "canonicalReference": "@azure/core-auth!GetTokenOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/identity!VisualStudioCodeCredentialOptions:interface",
          "docComment": "/**\n * Provides options to configure the Visual Studio Code credential.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VisualStudioCodeCredentialOptions extends "
            },
            {
              "kind": "Reference",
              "text": "TokenCredentialOptions",
              "canonicalReference": "@azure/identity!TokenCredentialOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "VisualStudioCodeCredentialOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/identity!VisualStudioCodeCredentialOptions#tenantId:member",
              "docComment": "/**\n * Optionally pass in a Tenant ID to be used as part of the credential\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tenantId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tenantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        }
      ]
    }
  ]
}
